{"version":3,"sources":["components/Message/Message.tsx","App.tsx","index.tsx"],"names":["Message","state","pressedKey","document","addEventListener","event","setState","key","this","className","React","Component","App","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,uDAKE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAPxC,kCAWE,WAA8B,IAAD,OAC3BJ,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAbxC,oBAiBE,WACE,IAAQL,EAAeM,KAAKP,MAApBC,WAER,OACE,mBAAGO,UAAU,eAAb,SACGP,EAAU,mCACsBA,EADtB,KAEN,gCAxBb,GAA6BQ,IAAMC,WCHtBC,EAAgB,kBAC3B,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,O,MCAJI,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.d4742445.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class Message extends React.Component {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <p className=\"App__message\">\n        {pressedKey\n          ? (`The last pressed key is [${pressedKey}]`)\n          : ('Nothing was pressed yet')}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport { Message } from './components/Message/Message';\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <Message />\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}